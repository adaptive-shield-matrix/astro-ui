---
import { buttonCva2, type ButtonSize, type ButtonVariant } from '@/button/buttonCva'
import { buttonIconCva } from '@/button/buttonIconCva'
import { classesButtonClickAnimation } from '@/button/classesButtonClickAnimation'
import Icon1 from '@/icon/Icon1.astro'


interface Props {
  title?: string
  href: string
  variant?: ButtonVariant
  size?: ButtonSize
  icon?: string
  iconRight?: string
  iconClass?: string
  newTab?: boolean
  class?: string
  id?: string
  clickAnimation?:boolean
}
const props = Astro.props
const hasChildren = Astro.slots.has("default")
const classes = buttonCva2(props.variant ?? "link", props.size, (props.clickAnimation ?? true) ?? classesButtonClickAnimation, props.class)
---

<a href={props.href} class={classes} target={props.newTab ? "_blank" : undefined} id={props.id} title={props.title}>
  {props.icon && <Icon1 path={props.icon} class={buttonIconCva(props.variant ?? "link", (props.title || hasChildren) && "mr-2", props.iconClass)} />}
  <slot />
  {
    props.iconRight && (
      <Icon1 path={props.iconRight} class={buttonIconCva(props.variant ?? "link", (props.title || hasChildren) && "ml-2", props.iconClass)} />
    )
  }
</a>
