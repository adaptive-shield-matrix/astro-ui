---
import { type MobileTableClassNames } from "./MobileTableClassNames.ts"
import { classMerge } from "@/ui_utils/classMerge.ts"
import { type TableColumnDef } from "./TableColumnDef.ts"

interface Props {
  row: string
  columns: TableColumnDef[]
  mobileClasses?: MobileTableClassNames
}
const { row, columns, mobileClasses: c } = Astro.props
---

<div class={classMerge("flex flex-col flex-wrap gap-2", c?.entry)}>
  {
    columns.map((column: TableColumnDef, i: number) => {
      if (i == 0) return <span class={classMerge("font-semibold", c?.first)}>{column.cell(row)}</span>
      return (
        <span class={classMerge("flex flex-wrap justify-between", c?.entry)}>
          <span class={classMerge("text-muted-foreground", c?.header)}>{column.name + ":"}</span>
          <span class={classMerge("text-right", c?.other)}>{column.cell(row)}</span>
        </span>
      )
    })
  }
</div>
